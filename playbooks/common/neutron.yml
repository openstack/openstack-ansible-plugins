---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Install neutron services
  hosts: "{{ neutron_hosts }}"
  serial: "{{ neutron_serial }}"
  gather_facts: false
  user: root
  environment: "{{ deployment_environment_variables | default({}) }}"
  pre_tasks:
    - name: Setup installation variables
      ansible.builtin.include_role:
        name: openstack.osa.install_defaults
        defaults_from: "{{ install_method }}"
        public: true
        apply:
          tags:
            - always
      tags:
        - always

    # In order to ensure that any container, software or
    # config file changes which causes a container/service
    # restart do not cause an unexpected outage, we drain
    # the load balancer back end for this container.
    - name: Disabling haproxy backends
      ansible.builtin.include_role:
        name: openstack.osa.haproxy_endpoint_manage
        apply:
          tags:
            - always
      vars:
        haproxy_backend: neutron_server-back
        haproxy_state: disabled
      when:
        - "'neutron_server' in group_names"
        - "groups['neutron_server'] | length > 1"
      tags:
        - always

    - name: Determine tunnel bridge IP address
      ansible.builtin.include_role:
        name: openstack.osa.dynamic_address_fact
      vars:
        network_address: "tunnel_address"
      tags:
        - always

    - name: Configure container (neutron-agent)
      ansible.builtin.include_role:
        name: "openstack.osa.{{ container_tech | default('lxc') }}_container_setup"
      vars:
        list_of_bind_mounts:
          - bind_dir_path: "{{ (ansible_facts['pkg_mgr'] == 'apt') | ternary('/lib/modules', '/usr/lib/modules') }}"
            mount_path: "{{ (ansible_facts['pkg_mgr'] == 'apt') | ternary('/lib/modules', '/usr/lib/modules') }}"
        extra_container_config:
          - "lxc.cgroup.devices.allow=a *:* rmw"
        extra_container_config_no_restart:
          - "lxc.start.order=29"
      when:
        - "not is_metal"
        - "'neutron_agent' in group_names"

    - name: Configure container (other services)
      ansible.builtin.include_role:
        name: "openstack.osa.{{ container_tech | default('lxc') }}_container_setup"
      when:
        - "not is_metal"
        - "'neutron_agent' not in group_names"

    - name: Including unbound_clients tasks
      ansible.builtin.include_role:
        name: openstack.osa.unbound_clients
      when:
        - hostvars['localhost']['resolvconf_enabled'] | bool

  roles:
    - role: "os_neutron"

    - role: "openstack.osa.system_crontab_coordination"
      tags:
        - crontab

  post_tasks:
    # Now that container changes are done, we can set
    # the load balancer back end for this container
    # to available again.
    - name: Enabling haproxy backends
      ansible.builtin.include_role:
        name: openstack.osa.haproxy_endpoint_manage
        apply:
          tags:
            - always
      vars:
        haproxy_backend: neutron_server-back
        haproxy_state: enabled
      when:
        - "'neutron_server' in group_names"
        - "groups['neutron_server'] | length > 1"
      tags:
        - always
