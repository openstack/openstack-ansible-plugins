---
# Copyright 2017, Logan Vig <logan2211@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Importing ceph_rgw_keystone_setup playbook
  import_playbook: openstack.osa.ceph_rgw_keystone_setup
  when: (groups[rgw_group_name] is defined and groups[rgw_group_name] | length > 0) or (ceph_rgws | length > 0)

- name: Gather ceph-rgw facts
  hosts: ceph-rgw
  gather_facts: "{{ osa_gather_facts | default(True) }}"
  tasks:
    - name: Define discovered_interpreter_python
      set_fact:
        discovered_interpreter_python: /usr/bin/python3
  tags:
    - always

- name: Install ceph radosgw
  hosts: ceph-rgw
  gather_facts: false
  user: root
  pre_tasks:
    - name: Setup installation variables
      include_role:
        name: openstack.osa.install_defaults
        defaults_from: "{{ install_method }}"
        public: true
        apply:
          tags:
            - always
      tags:
        - always

    - name: Including unbound-clients role
      include_role:
        name: openstack.osa.unbound_clients
      when:
        - hostvars['localhost']['resolvconf_enabled'] | bool

    # Set the priority of the ceph community apt repo either above or below that of UCA or distro sources
    - name: Set apt package pins
      include_role:
        name: apt_package_pinning
      vars:
        apt_package_pinning_file_name: "ceph_community_pin.pref"
        apt_package_pinning_priority: "{{ (ceph_repository == 'community') | ternary(1000, 100) }}"
        apt_pinned_packages: [{ package: '*', release: 'ceph.com' }]
      when:
        - ansible_facts['pkg_mgr'] == 'apt'

    - name: Install python3-yaml
      package:
        name: "{{ (ansible_facts['os_family'] | lower == 'debian') | ternary('python3-yaml', 'python3-pyyaml') }}"
        state: present

    - name: Gather ceph-mon facts
      action: setup
      delegate_to: "{{ item }}"
      delegate_facts: yes
      with_items: "{{ groups[mon_group_name] }}"
      when:
        - inventory_hostname == ansible_play_hosts[0]
      tags:
        - ceph-mon-facts
        - ceph-rgw

    - name: Create and install SSL certificates
      include_role:
        name: pki
        tasks_from: main_certs.yml
        apply:
          tags:
            - ceph-rgw-config
            - pki
      vars:
        pki_setup_host: "{{ ceph_rgw_pki_setup_host }}"
        pki_dir: "{{ ceph_rgw_pki_dir }}"
        pki_create_certificates: "{{ ceph_rgw_user_ssl_cert is not defined and ceph_rgw_user_ssl_key is not defined }}"
        pki_regen_cert: "{{ ceph_rgw_pki_regen_cert }}"
        pki_certificates: "{{ ceph_rgw_pki_certificates }}"
        pki_install_certificates: "{{ ceph_rgw_pki_install_certificates }}"
      when:
        - ceph_rgw_backend_ssl
      tags:
        - always

  roles:
    - role: ceph-defaults
      tags:
        - skip_ansible_lint
    - role: ceph-facts
      tags:
        - skip_ansible_lint
    - role: ceph-common
      tags:
        - skip_ansible_lint
    - role: ceph-handler
      tags:
        - skip_ansible_lint
    - role: ceph-config
      tags:
        - skip_ansible_lint
    - role: ceph-rgw
      tags:
        - skip_ansible_lint
    - role: "openstack.osa.system_crontab_coordination"
      tags:
        - "system-crontab-coordination"

  vars:
    is_metal: "{{ properties.is_metal|default(false) }}"
    radosgw_civetweb_port: "{{ radosgw_service_port }}"
  tags:
    - ceph-rgw
